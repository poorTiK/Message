//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Message.FileService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatFile", Namespace="http://schemas.datacontract.org/2004/07/ServerWCF.Model")]
    [System.SerializableAttribute()]
    public partial class ChatFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileService.IFileService")]
    public interface IFileService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/getChatFileById", ReplyAction="http://tempuri.org/IFileService/getChatFileByIdResponse")]
        Message.FileService.ChatFile getChatFileById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/getChatFileById", ReplyAction="http://tempuri.org/IFileService/getChatFileByIdResponse")]
        System.Threading.Tasks.Task<Message.FileService.ChatFile> getChatFileByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/getChatFileByName", ReplyAction="http://tempuri.org/IFileService/getChatFileByNameResponse")]
        Message.FileService.ChatFile getChatFileByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/getChatFileByName", ReplyAction="http://tempuri.org/IFileService/getChatFileByNameResponse")]
        System.Threading.Tasks.Task<Message.FileService.ChatFile> getChatFileByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/UploadFile", ReplyAction="http://tempuri.org/IFileService/UploadFileResponse")]
        int UploadFile(Message.FileService.ChatFile chatFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/UploadFile", ReplyAction="http://tempuri.org/IFileService/UploadFileResponse")]
        System.Threading.Tasks.Task<int> UploadFileAsync(Message.FileService.ChatFile chatFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/UpdateFileSource", ReplyAction="http://tempuri.org/IFileService/UpdateFileSourceResponse")]
        Message.FileService.ChatFile UpdateFileSource(int fileId, byte[] source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/UpdateFileSource", ReplyAction="http://tempuri.org/IFileService/UpdateFileSourceResponse")]
        System.Threading.Tasks.Task<Message.FileService.ChatFile> UpdateFileSourceAsync(int fileId, byte[] source);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileServiceChannel : Message.FileService.IFileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileServiceClient : System.ServiceModel.ClientBase<Message.FileService.IFileService>, Message.FileService.IFileService {
        
        public FileServiceClient() {
        }
        
        public FileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Message.FileService.ChatFile getChatFileById(int id) {
            return base.Channel.getChatFileById(id);
        }
        
        public System.Threading.Tasks.Task<Message.FileService.ChatFile> getChatFileByIdAsync(int id) {
            return base.Channel.getChatFileByIdAsync(id);
        }
        
        public Message.FileService.ChatFile getChatFileByName(string name) {
            return base.Channel.getChatFileByName(name);
        }
        
        public System.Threading.Tasks.Task<Message.FileService.ChatFile> getChatFileByNameAsync(string name) {
            return base.Channel.getChatFileByNameAsync(name);
        }
        
        public int UploadFile(Message.FileService.ChatFile chatFile) {
            return base.Channel.UploadFile(chatFile);
        }
        
        public System.Threading.Tasks.Task<int> UploadFileAsync(Message.FileService.ChatFile chatFile) {
            return base.Channel.UploadFileAsync(chatFile);
        }
        
        public Message.FileService.ChatFile UpdateFileSource(int fileId, byte[] source) {
            return base.Channel.UpdateFileSource(fileId, source);
        }
        
        public System.Threading.Tasks.Task<Message.FileService.ChatFile> UpdateFileSourceAsync(int fileId, byte[] source) {
            return base.Channel.UpdateFileSourceAsync(fileId, source);
        }
    }
}
